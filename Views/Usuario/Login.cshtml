<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        transition: background-color 0.3s, color 0.3s;
    }

    .container {
        padding: 20px;
        width: 100%;
        max-width: 450px;
    }

    .card {
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        background-color: white;
        transition: background-color 0.3s, color 0.3s;
    }

    h2 {
        color: #343a40;
    }

    .input-group-text {
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
    }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: #fff;
    }

    /* Botão do modo noturno */
    .btn-dark-mode {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #343a40;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 50px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-dark-mode:hover {
        background-color: #1d1f21;
    }

    /* Modo Noturno */
    body.dark-mode {
        background-color: #121212;
        color: white;
    }

    .dark-mode .card {
        background-color: #1e1e1e;
        color: white;
    }

    .dark-mode h2 {
        color: white;
    }

    .dark-mode .form-control {
        background-color: #333;
        color: white;
        border: 1px solid #555;
    }

    .dark-mode .form-control::placeholder {
        color: #bbb;
    }

    .dark-mode .input-group-text {
        background-color: #333;
        color: white;
    }

    .dark-mode .btn-primary {
        background-color: #007bff;
    }

    .dark-mode .btn-primary:hover {
        background-color: #0056b3;
    }
</style>

<body>
    <button id="toggleDarkMode" class="btn-dark-mode">
        <i class="fas fa-moon"></i>
    </button>

    <div class="container">
        <div class="row justify-content-center">
            <div>
                <div class="card text-center">
                    <h2 class="mb-3">Login</h2>
                    <form id="authForm" method="post">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email:</label>
                            <input type="email" class="form-control" id="email" name="email"
                                placeholder="Digite seu e-mail" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Senha:</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="password" name="password"
                                    placeholder="Digite sua senha" required>
                                <span id="btnVeja" class="input-group-text">
                                    <i id="togglePassword" class="fas fa-eye"></i>
                                </span>
                            </div>
                        </div>
                        <button id="btnLogin" type="submit" class="btn btn-primary w-100" disabled>Entrar</button>
                        <div id="error-message" class="alert alert-danger mt-3" style="display: none;"></div>
                    </form>
                    <div class="mt-3">
                        <a href="/Cadastro" class="btn btn-outline-primary w-100">Não tem uma conta? Cadastre-se</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function togglePasswordVisibility(inputId, iconId) {
            const passwordField = document.getElementById(inputId);
            const icon = document.getElementById(iconId);

            if (passwordField.type === "password") {
                passwordField.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                passwordField.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }

        document.getElementById("btnVeja").addEventListener("click", function () {
            togglePasswordVisibility("password", "togglePassword");
        });

        function validarCampos() {
            let email = document.getElementById("email").value.trim();
            let senha = document.getElementById("password").value.trim();
            let botao = document.getElementById("btnLogin");

            botao.disabled = (email === "" || senha === "");
        }

        document.getElementById("email").addEventListener("input", validarCampos);
        document.getElementById("password").addEventListener("input", validarCampos);

        document.getElementById("authForm").addEventListener("submit", function (event) {
            event.preventDefault();

            let data = {
                email: document.getElementById("email").value,
                senha: document.getElementById("password").value
            };

            fetch("/login", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
                .then(async response => {
                    const json = await response.json();

                    if (!response.ok) {
                        let errorMessage = "Erro ao autenticar";

                        if (json.error) {
                            errorMessage = json.error;
                        } else if (json.errors) {
                            const firstErrorKey = Object.keys(json.errors)[0];
                            if (json.errors[firstErrorKey] && json.errors[firstErrorKey].length > 0) {
                                errorMessage = json.errors[firstErrorKey][0];
                            }
                        }

                        throw new Error(errorMessage);
                    }

                    return json;
                })
                .then(data => {
                    console.log("Sucesso:", data);
                    document.getElementById("authForm").reset();
                    document.getElementById("btnLogin").disabled = true;
                    if (data.token) {
                        localStorage.setItem("token", data.token);
                    }
                    if (data.user && data.user.id) {
                        localStorage.setItem("usuarioId", data.user.id); // Salvar o ID do usuário
                    }
                    window.location.href = "/Redirecionando";
                })
                .catch(error => {
                    console.error("Erro:", error);
                    const errorMessageElement = document.getElementById("error-message");
                    errorMessageElement.innerText = error.message;
                    errorMessageElement.style.display = "block";
                });
        });

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("btnLogin").disabled = true;
        });

        const darkModeToggle = document.getElementById('toggleDarkMode');
        const body = document.body;

        if (localStorage.getItem('dark-mode') === 'enabled') {
            body.classList.add('dark-mode');
            darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }

        darkModeToggle.addEventListener('click', () => {
            body.classList.toggle('dark-mode');

            if (body.classList.contains('dark-mode')) {
                localStorage.setItem('dark-mode', 'enabled');
                darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
            } else {
                localStorage.setItem('dark-mode', 'disabled');
                darkModeToggle.innerHTML = '<i class="fas fa-moon"></i>';
            }
        });

        async function generateContent(apiKey, prompt) {
            const url = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=' + apiKey;

            const headers = {
                'Content-Type': 'application/json'
            };

            const body = JSON.stringify({
                contents: [{
                    parts: [{
                        text: prompt
                    }]
                }]
            });

            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: headers,
                    body: body
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                console.log(data);
                return data;
            } catch (error) {
                console.error('Erro ao chamar a API:', error);
                throw error;
            }
        }

        // Exemplo de uso
        const apiKey = 'AIzaSyBFLHbZ6F3GSKILV9QUiD939Vjok2pKO9A';
        const prompt = 'Escreva um pequeno poema sobre a natureza.';

        generateContent(apiKey, prompt)
            .then(data => {
                console.log(data.candidates[0].content.parts[0].text);
            })
            .catch(error => {

            });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>
