// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoIntegrador.Data;

#nullable disable

namespace ProjetoIntegrador.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250323181106_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ProjetoIntegrador.Models.AdmCriou", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Criou")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AdmCriou");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Calorias")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Carboidratos")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Gorduras")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Proteinas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VitaminasEMinerais")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.AlimentoQuantidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlimentosId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DietaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DietaId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DietaId2")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DietaId3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlimentosId");

                    b.HasIndex("DietaId");

                    b.HasIndex("DietaId1");

                    b.HasIndex("DietaId2");

                    b.HasIndex("DietaId3");

                    b.ToTable("AlimentoQuantidade");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.AlimentoUsuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("AlimentosUsuarios");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Dieta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DietaSemanaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DietaSemanaId");

                    b.ToTable("Dieta");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.DietaSemana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NutricionistaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NutricionistaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DietaSemana");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NutricionistaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NutricionistaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensagem");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.UserNutri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Aceito")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NutricionistaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NutricionistaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Altura")
                        .HasColumnType("REAL");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instagram")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Peso")
                        .HasColumnType("REAL");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.AdmCriou", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.AlimentoQuantidade", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.Alimento", "Alimentos")
                        .WithMany()
                        .HasForeignKey("AlimentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoIntegrador.Models.Dieta", null)
                        .WithMany("Almoco")
                        .HasForeignKey("DietaId");

                    b.HasOne("ProjetoIntegrador.Models.Dieta", null)
                        .WithMany("Cafe")
                        .HasForeignKey("DietaId1");

                    b.HasOne("ProjetoIntegrador.Models.Dieta", null)
                        .WithMany("CafeDT")
                        .HasForeignKey("DietaId2");

                    b.HasOne("ProjetoIntegrador.Models.Dieta", null)
                        .WithMany("Janta")
                        .HasForeignKey("DietaId3");

                    b.Navigation("Alimentos");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.AlimentoUsuario", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Usuario")
                        .WithMany("Alimento")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Dieta", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.DietaSemana", null)
                        .WithMany("Dietas")
                        .HasForeignKey("DietaSemanaId");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.DietaSemana", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Nutricionista")
                        .WithMany()
                        .HasForeignKey("NutricionistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutricionista");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Mensagem", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Nutricionista")
                        .WithMany()
                        .HasForeignKey("NutricionistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutricionista");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.UserNutri", b =>
                {
                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Nutricionista")
                        .WithMany()
                        .HasForeignKey("NutricionistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoIntegrador.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutricionista");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Dieta", b =>
                {
                    b.Navigation("Almoco");

                    b.Navigation("Cafe");

                    b.Navigation("CafeDT");

                    b.Navigation("Janta");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.DietaSemana", b =>
                {
                    b.Navigation("Dietas");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Usuarios", b =>
                {
                    b.Navigation("Alimento");
                });
#pragma warning restore 612, 618
        }
    }
}
